.questCard {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  background: linear-gradient(to bottom right, hsl(var(--card) / 0.5), hsl(var(--card) / 0.8));
  backdrop-filter: blur(8px);
}

.questCard::before {
  content: "";
  position: absolute;
  inset: 0;
  padding: 1px;
  border-radius: inherit;
  background: linear-gradient(135deg, hsl(var(--primary) / 0.5), transparent 50%, hsl(var(--primary) / 0.2));
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: exclude;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.questCard:hover::before {
  opacity: 1;
}

.questCard:hover {
  transform: translateY(-2px);
}

.completedQuest {
  background: linear-gradient(to bottom right, hsl(var(--primary) / 0.1), hsl(var(--card) / 0.8));
}

.statsCard {
  position: relative;
  overflow: hidden;
  background: linear-gradient(135deg, hsl(var(--card) / 0.5), hsl(var(--card) / 0.8));
  backdrop-filter: blur(10px);
}

.statsCard::before {
  content: "";
  position: absolute;
  inset: 0;
  padding: 1px;
  border-radius: inherit;
  background: linear-gradient(135deg, hsl(var(--primary) / 0.5), transparent);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: exclude;
  pointer-events: none;
}

.filtersCard {
  background: linear-gradient(to bottom right, hsl(var(--card) / 0.5), hsl(var(--card) / 0.8));
  backdrop-filter: blur(12px);
}

.selectedCategory {
  position: relative;
  overflow: hidden;
}

.selectedCategory::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(45deg, transparent, hsl(var(--primary) / 0.2), transparent);
  animation: shine 2s infinite linear;
}

.questButton {
  position: relative;
  overflow: hidden;
}

.timePeriodButton,
.categoryPill {
  position: relative;
  overflow: hidden;
}

.questButton::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(90deg, transparent, hsl(var(--primary-foreground) / 0.2), transparent);
  transform: translateX(-100%);
  transition: transform 0.6s ease;
}

.questButton:hover::before {
  transform: translateX(100%);
}

@keyframes shine {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(100%);
  }
}

.questCard:hover .questButton {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px hsl(var(--primary) / 0.2);
}

/* Progress bar animation */
@keyframes progress {
  from {
    width: 0;
  }
}

/* Achievement badge glow effect */
.achievementBadge {
  position: relative;
}

.achievementBadge::after {
  content: "";
  position: absolute;
  inset: -1px;
  background: linear-gradient(45deg, transparent, hsl(var(--primary) / 0.5), transparent);
  animation: rotate 3s linear infinite;
  border-radius: inherit;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Filter button hover effect */
.filterButton {
  transition: all 0.2s ease;
}

.filterButton:hover {
  transform: translateY(-1px);
  box-shadow: 0 2px 8px hsl(var(--primary) / 0.2);
}

/* Empty state animation */
.emptyState {
  animation: float 3s ease-in-out infinite;
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

/* Quest completion animation */
.completionAnimation {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: hsl(var(--background) / 0.8);
  backdrop-filter: blur(8px);
  z-index: 50;
  animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.completionContent {
  animation: scaleIn 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes scaleIn {
  from {
    transform: scale(0.8);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

/* Prerequisite chain visualization */
.prerequisiteChain {
  position: relative;
}

.prerequisiteChain::before {
  content: "";
  position: absolute;
  left: 50%;
  top: 0;
  bottom: 0;
  width: 2px;
  background: linear-gradient(to bottom, transparent, hsl(var(--primary) / 0.5), transparent);
}

/* Difficulty badge styles */
.difficultyBadge {
  position: relative;
  overflow: hidden;
}

.difficultyBadge::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(45deg, transparent, currentColor, transparent);
  opacity: 0.2;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 0.2;
  }
  50% {
    opacity: 0.4;
  }
}

